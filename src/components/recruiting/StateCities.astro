---
import { getCollection } from 'astro:content';

interface Props {
  state: string;
}

const { state } = Astro.props;

// Get all recruiting entries
const allEntries = await getCollection('recruiting');

// Function to create URL-safe slugs
const createSlug = (text) => {
  return text.toLowerCase().replace(/\s+/g, '-');
};

// Create the state slug once
const stateSlug = createSlug(state);

// Find all city folders in this state by looking for entries with state/city pattern
const stateCities = allEntries.filter(entry => {
  const pathParts = entry.slug.split('/');
  // Just check if it's a direct subfolder under the state
  return pathParts[0] === stateSlug && 
         pathParts.length === 2; // state/city pattern
});

// Get unique city folders
const uniqueCities = [...new Set(stateCities.map(entry => {
  const citySlug = entry.slug.split('/')[1];
  return {
    slug: citySlug,
    name: entry.data.name || citySlug.replace(/-/g, ' '),
    metropolitanArea: entry.data.metropolitanArea
  };
}))];

console.log('Debug:', {
  state,
  stateSlug,
  foundCities: uniqueCities.map(c => c.slug)
});
---

<div class="bg-white p-8 rounded-3xl shadow-2xl shadow-slate-200/20 ring-1 ring-slate-200 mt-12">
  <h2 class="text-2xl font-semibold mb-4">Electrical Staffing by City in {state}</h2>
  <p class="text-gray-600 mb-6">
    Check out <span class="text-blue-600 font-bold">Electrical Jobs</span> electrical and low voltage staffing services in cities across {state}.
  </p>

  <div class="grid gap-4">
    {uniqueCities.map(city => (
      <a 
        href={`/recruiting/${stateSlug}/${city.slug}`}
        class="block bg-gray-50 p-4 rounded-xl hover:bg-blue-50 transition-colors group"
      >
        <div class="flex items-center justify-between">
          <div>
            <h3 class="font-medium text-gray-900 group-hover:text-blue-600">
              {city.name} Electrical Staffing
            </h3>
            {city.metropolitanArea && (
              <p class="text-sm text-gray-600 mt-1">
                {city.metropolitanArea}
              </p>
            )}
          </div>
          <svg xmlns="http://www.w3.org/2000/svg" class="size-5 text-gray-400 group-hover:text-blue-600" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
            <path d="M4 12h16m-7-7 7 7-7 7" />
          </svg>
        </div>
      </a>
    ))}
  </div>
</div> 