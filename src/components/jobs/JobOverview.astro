---
interface Props {
  position: string;
  city: string;
  state: string;
  salary: {
    currency: string;
    minValue: number;
    maxValue: number;
    unitText: string;
  };
}

const { position, city, state, salary } = Astro.props;

// Format salary range
const formatSalary = (value: number) => {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: salary.currency,
    maximumFractionDigits: 0
  }).format(value);
};

const salaryRange = `${formatSalary(salary.minValue)} - ${formatSalary(salary.maxValue)} / ${salary.unitText.toLowerCase()}`;
---

<div class="mt-12 bg-white rounded-3xl p-8 border mb-12 border-slate-200">
  <div class="grid gap-6">
    <div>
      <h2 class="text-3xl font-semibold text-purple-900">{position}</h2>
      <p class="text-lg text-slate-600 mt-2">{city}, {state}</p>
    </div>

    <div>
      <p class="text-lg font-semibold text-blue-600 ">{salaryRange}</p>
    </div>

    <button
      id="applyNowButton"
      class=" text-white items-center font-medium gap-3 inline-flex focus-visible:outline-2 focus-visible:outline-offset-2 focus:outline-none justify-center px-6 lg:px-8 ring-2 ring-transparent focus:ring-offset-2 focus:ring-blue-500 duration-200 py-3.5 rounded-full active:bg-blue-800 active:text-white bg-blue-500 hover:bg-blue-600 w-full"
    >
      Apply Now!
      <svg xmlns="http://www.w3.org/2000/svg" class="size-6" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
        <path d="M4 12h16m-7-7 7 7-7 7" />
      </svg>
    </button>
    <p class="text-sm text-slate-600">*Please note, even if you do not possess all of the skills listed, we encourage you to apply!</p>
  </div>
</div>

<script>
  // Add click handler for the apply button
  const applyButton = document.getElementById('applyNowButton');
  const modal = document.getElementById('applicationModal') as HTMLDialogElement;

  applyButton?.addEventListener('click', () => {
    modal.showModal();
  });
</script> 